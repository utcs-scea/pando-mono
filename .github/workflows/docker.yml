# SPDX-License-Identifier: MIT
# Copyright (c) 2023. University of Texas at Austin. All rights reserved.

name: Docker / Ubuntu 22.04 / PREP / gasnet-mpi-par
run-name: docker-prep-mpi-ubuntu-2204 performed by @${{ github.triggering_actor }}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prep-mpi-ubuntu-2204-docker:
    name: gcc / ${{ matrix.project }} / ${{ matrix.build-type }}
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: pando
      CONTAINER_SRC_DIR: "/pando"
      CONTAINER_BUILD_DIR: "/pando/dockerbuild"
      CONTAINER_WORK_DIR: "/pando"
      INTERACTIVE: ""
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        build-type: ['Release', 'LSAN', 'UBSAN']
        project: ["ROOT", "GALOIS", "WF4"]
        exclude:
          - build-type: "UBSAN"
            project: "ROOT"
          - build-type: "UBSAN"
            project: "ROOT"

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: 'true'

    - name: Set up environment variables
      timeout-minutes: 1
      run: |
        echo "UNAME=$(whoami)" >> $GITHUB_ENV
        echo "UID=$(id -u)" >> $GITHUB_ENV
        echo "GID=$(id -g)" >> $GITHUB_ENV
        echo "SRC_DIR=$(pwd)" >> $GITHUB_ENV
        echo "PANDO_TEST_DISCOVERY_TIMEOUT=600" >> $GITHUB_ENV
        echo "IMAGE_VERSION=$(git log --pretty="%h" -1 Dockerfile.dev)" >> $GITHUB_ENV
        if [ ${{ matrix.build-type }} == 'LSAN' ] || [ ${{ matrix.build-type}} == 'UBSAN']; then
          PANDO_CONTAINER_ENV="-e=PANDO_PREP_L1SP_HART=16384"
        fi
        if [ ${{ matrix.project }} == 'ROOT' ]; then
          PANDO_CONTAINER_ENV="${PANDO_CONTAINER_ENV} -e=ROOT_TESTS=ON"
        fi
        if [ ${{ matrix.project }} == 'GALOIS' ]; then
          PANDO_CONTAINER_ENV="${PANDO_CONTAINER_ENV} -e=GALOIS_TESTS=ON"
        fi
        if [ ${{ matrix.project }} == 'WF4' ]; then
          PANDO_CONTAINER_ENV="${PANDO_CONTAINER_ENV} -e=BUILD_WORKFLOWS=ON -e=WF4_TESTS=ON"
        fi
        if [ ${{ runner.name }} == 'zerberus-0' ]; then
          echo "CONTAINER_CPUSET='--cpuset-cpus=0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30'" >> $GITHUB_ENV
        fi
        if [ ${{ runner.name }} == 'zerberus-1' ]; then
          echo "CONTAINER_CPUSET='--cpuset-cpus=1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31'" >> $GITHUB_ENV
        fi
        echo "PANDO_CONTAINER_ENV=${PANDO_CONTAINER_ENV}" >> ${GITHUB_ENV}
        cat $GITHUB_ENV

    - name: Configure
      timeout-minutes: 10
      run: |
        CONTAINER_CMD="make setup-ci" \
          CONTAINER_OPTS="-e=BUILD_TYPE=${{ matrix.build-type }}" \
          IMAGE_NAME="${{ env.IMAGE_NAME }}" \
          VERSION="${{ env.IMAGE_VERSION }}" \
          make docker

    - name: Build
      timeout-minutes: 15
      run: |
        CONTAINER_CMD="setarch `uname -m` -R bash -c '. ~/.profile && make -j8 || make || make'" \
          IMAGE_NAME="${{ env.IMAGE_NAME }}" \
          VERSION="${{ env.IMAGE_VERSION }}" \
          CONTAINER_WORKDIR="${{ env.CONTAINER_BUILD_DIR }}" \
          make docker

    - name: Run Smoke Test
      timeout-minutes: 10
      env:
        PANDO_PREP_LOG_LEVEL: warning
      run: |
        mkdir -p data
        CONTAINER_CMD="setarch `uname -m` -R bash -c 'export HOST_THREADS=8 && . ~/.profile && make smoke-tests'" \
          IMAGE_NAME="${{ env.IMAGE_NAME }}" \
          VERSION="${{ env.IMAGE_VERSION }}" \
          make docker

    - name: Run Tests
      timeout-minutes: 30
      env:
        PANDO_PREP_LOG_LEVEL: warning
      run: |
        CONTAINER_CMD="setarch `uname -m` -R make run-tests" \
          IMAGE_NAME="${{ env.IMAGE_NAME }}" \
          VERSION="${{ env.IMAGE_VERSION }}" \
          make docker
